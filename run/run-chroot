#!/bin/bash
#
# Starts up the chroot'ed environment after mount binding
# /proc, /sys and /dev

echo ${RANDOMIZE_VA_SPACE} > /proc/sys/kernel/randomize_va_space

if [ "$LEGACY_VA_LAYOUT" != "" ]
then
   echo ${LEGACY_VA_LAYOUT} > /proc/sys/vm/legacy_va_layout
fi

if [ "$ID" = "" ]
then
   echo "Environment variables not set"
   exit
fi

NEWROOT="/armx/${ID}/${ROOTFS}"

mount --bind /proc ${NEWROOT}/proc
mount --bind /sys ${NEWROOT}/sys

# Mount the /dev tree only if the
# flag mount_dev_tree=1 is set
if [ "$MOUNTDEVTREE" = "1" ]
then
   mount --bind /dev ${NEWROOT}/dev
fi

# copy the libs to be LD_PRELOADed into ${NEWROOT}/.armx

rm -Rf ${NEWROOT}/.armx
mkdir -p ${NEWROOT}/.armx
PRELOADLIBS=""
for lib in ${PRELOADDIR}/*.so
do
   cp ${lib} ${NEWROOT}/.armx/
   libfile=$(basename ${lib})
   PRELOADLIBS="/.armx/${libfile}:${PRELOADLIBS}"
done
INITPATH="/.armx/armxinit"

# If run-chroot is invoked with "shell" as a command line argument
# then simply drop to /bin/sh after chroot. Don't run the initcommands

echo "#!/bin/sh" > ${NEWROOT}${INITPATH}
echo "export LD_PRELOAD=${PRELOADLIBS}" >> ${NEWROOT}${INITPATH}

if [ "$1" != "shell" ]
then
   echo "${INITCOMMANDS}" | sed -e 's/^"//' -e 's/"$//' -e 's/;/\n/g' >> ${NEWROOT}${INITPATH}
   echo ">>> Starting ${ID}"
else
   echo "/bin/sh" >> ${NEWROOT}${INITPATH}
fi

chmod 755 ${NEWROOT}${INITPATH}
echo "[+] chroot $NEWROOT $INITPATH"
chroot ${NEWROOT} ${INITPATH}
